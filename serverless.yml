service: insta-api

frameworkVersion: '2'

provider:
  name: aws
  runtime: python3.8
  region: eu-north-1
  lambdaHashingVersion: 20201221
  environment:
    BUCKET: !Ref ServerlessDeploymentBucket
    CLIENT_ID: ${file(secrets.yml):instagram.id}
    CLIENT_SECRET: ${file(secrets.yml):instagram.secret}
    REDIRECT_URL: ${file(secrets.yml):instagram.redirect}
    REFRESH_ID: ${file(secrets.yml):refresh.id}
  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - 's3:*'
          Resource:
            !Sub
            - 'arn:aws:s3:::${Bucket}/*'
            - { Bucket: !Ref ServerlessDeploymentBucket }
        - Effect: "Allow"
          Action:
            - 'SNS:Publish'
          Resource: !Ref ErrorTopic

plugins:
  - serverless-python-requirements

package:
  exclude:
    - '*'
  include:
    - handler.py

resources:
  Resources:
    ErrorTopic:
      Type: AWS::SNS::Topic
      Properties:
        DisplayName: ${self:service}-errors
        TopicName: ${self:service}-errors

functions:
  authorize:
    handler: handler.authorize
    events:
      - httpApi:
          path: /authorize
          method: get
  load:
    handler: handler.load
    onError: !Ref ErrorTopic
    events:
      - httpApi:
          path: /load
          method: get
  refresh:
    handler: handler.refresh
    onError: !Ref ErrorTopic
    events:
      - httpApi:
          path: /refresh
          method: get
      - schedule: cron(18 18 ? * 5 *)
